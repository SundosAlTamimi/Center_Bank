  private class GetAllCheck_JSONTask extends AsyncTask<String, String, String> {

        @Override
        protected void onPreExecute() {
            super.onPreExecute();

        }

        @Override
        protected String doInBackground(String... params) {
            try {

                String JsonResponse = null;
                HttpClient client = new DefaultHttpClient();
                HttpPost request = new HttpPost();
//                http://localhost:8082/GetAllTempCheck?CUSTMOBNO=0798899716&CUSTIDNO=123456
                request.setURI(new URI(serverLink + "GetAllTempCheck?"));

                List<NameValuePair> nameValuePairs = new ArrayList<NameValuePair>(1);
                nameValuePairs.add(new BasicNameValuePair("CUSTMOBNO", userNmae));
//                nameValuePairs.add(new BasicNameValuePair("CUSTIDNO", localNationlNo));
                nameValuePairs.add(new BasicNameValuePair("CUSTIDNO", "0123456789"));// test
                request.setEntity(new UrlEncodedFormEntity(nameValuePairs,"UTF-8"));


//                HttpResponse response = client.execute(request);
//                request.setEntity(new UrlEncodedFormEntity(nameValuePairs));

                HttpResponse response = client.execute(request);

                BufferedReader in = new BufferedReader(new
                        InputStreamReader(response.getEntity().getContent()));

                StringBuffer sb = new StringBuffer("");
                String line = "";

                while ((line = in.readLine()) != null) {
                    sb.append(line);
                }

                in.close();

                JsonResponse = sb.toString();
                Log.e("tagAlertScreen", "" + JsonResponse);

                return JsonResponse;

            } catch (Exception e) {
                e.printStackTrace();
                return null;
            }
        }

        @Override
        protected void onPostExecute(String s) {
            super.onPostExecute(s);

            if (s != null) {
                if (s.contains("\"StatusDescreption\":\"OK\"")) {
                    JSONObject jsonObject = null;
                    try {

                        checkInfoNotification.clear();

                        if(first==1){
                            notificationArrayList.clear();
                        }
                        notificationArrayListTest.clear();


                        arrayListRow.clear();
                        arrayListRowFirst.clear();
                        notifiList.clear();
                        jsonObject = new JSONObject(s);

                        JSONArray notificationInfo = jsonObject.getJSONArray("INFO");
                        for(int i=0;i<notificationInfo.length();i++)
                        {
                            JSONObject infoDetail=notificationInfo.getJSONObject(i);
//                            serverPicBitmap=null;

                            notification notifi=new notification();
                            notifi.setSource(infoDetail.get("CUSTOMERNM").toString());
                            notifi.setDate(infoDetail.get("CHECKDUEDATE").toString());
                            notifi.setAmount_check( infoDetail.get("AMTJD").toString());
                            ChequeInfo chequeInfo=new ChequeInfo();
                            chequeInfo.setRowId(infoDetail.get("ROWID").toString());
                            chequeInfo.setRecieverNationalID(infoDetail.get("TOCUSTOMERNATID").toString());
                            chequeInfo.setRecieverMobileNo(infoDetail.get("TOCUSTOMERMOB").toString());
                            chequeInfo.setCustName(infoDetail.get("CUSTOMERNM").toString());
                            chequeInfo.setChequeData(infoDetail.get("CHECKDUEDATE").toString());
                            chequeInfo.setToCustomerName(infoDetail.get("CUSTOMERNM").toString());

                            chequeInfo.setMoneyInDinar(infoDetail.get("AMTJD").toString());
                            chequeInfo.setMoneyInWord(infoDetail.get("AMTWORD").toString());
                            chequeInfo.setBankName(infoDetail.get("BANKNM").toString());
                            chequeInfo.setChequeNo(infoDetail.get("CHECKNO").toString());

                            chequeInfo.setBranchNo(infoDetail.get("BRANCHNO").toString());
                            chequeInfo.setAccCode(infoDetail.get("ACCCODE").toString());
                            chequeInfo.setIbanNo(infoDetail.get("IBANNO").toString());
                            chequeInfo.setBankNo(infoDetail.get("BANKNO").toString());
//                            Log.e("chequeInfo",""+chequeInfo.getAccCode()+chequeInfo.getBankNo()+chequeInfo.getBranchNo()+"\t"+chequeInfo.getChequeNo());

                            arrayListRow.add(chequeInfo.getRowId());

                            checkInfoNotification.add(chequeInfo);
                            if(first==1){
                                notificationArrayList.add(notifi);
                                Log.e("notificationArrayList",""+notificationArrayList.get(0).getCheck_photo());
                            }

                            notificationArrayListTest.add(notifi);
                            Log.e("notificationAr2rayList",""+notificationArrayListTest.get(0).getCheck_photo());


                        }
//                        for(int k=0;k<checkInfoNotification.size();k++)
//                        {
//                            getPicture(checkInfoNotification.get(k).getAccCode(),checkInfoNotification.get(k).getBankNo(),checkInfoNotification.get(k).getBranchNo(),checkInfoNotification.get(k).getChequeNo());
//                            notificationArrayList.get(k).setCheck_photo(serverPicBitmap);
//                            Log.e("serverPicBitmapFor",""+serverPicBitmap);
//
//                        }


                        if(first==1)
                        {
                            fillListNotification(notificationArrayList);

                        }



                        Set<String> set = sharedPreferences.getStringSet("DATE_LIST", null);

                        if(set !=null)
                        {
//
                            set = sharedPreferences.getStringSet("DATE_LIST", null);
                            arrayListRowFirst.addAll(set);

                            int countFirst=arrayListRowFirst.size();
                                if(arrayListRow.size()<countFirst)//there are update new data is less than old data
                                {Log.e("olddataGreater","countFirst"+countFirst);

                                    for( int h=0;h<arrayListRow.size();h++){
                                        int index= arrayListRowFirst.indexOf(arrayListRow.get(h));
                                        if(index==-1)
                                        {
                                            arrayListRowFirst.add(arrayListRow.get(h));
                                            Log.e("arrayListRowYES",""+arrayListRow.get(h));

                                        }

                                    }

                                    if (countFirst < arrayListRowFirst.size())// new data
                                    {
                                        ShowNotifi();

                                        fillListNotification(notificationArrayListTest);


                                    }
                                    else {

                                        fillListNotification(notificationArrayListTest);
                                    }

                                }//********************************************
                                else {
                                    if(arrayListRow.size()>countFirst)// new data
                                    {
                                        Log.e("NewGreater","countFirst");
                                        fillListNotification(notificationArrayListTest);
                                        ShowNotifi();

                                    }
                                    else{
                                        if(arrayListRow.size()==countFirst)// equal size
                                        {
                                            Log.e("arrayListRow","== hereeee");

                                            for( int h=0;h<arrayListRow.size();h++){
                                                int index= arrayListRowFirst.indexOf(arrayListRow.get(h));
                                                if(index==-1)
                                                {
                                                    arrayListRowFirst.add(arrayListRow.get(h));


                                                }

                                            }

                                            if (countFirst < arrayListRowFirst.size())// new data
                                            {
                                                ShowNotifi();

                                                fillListNotification(notificationArrayListTest);

                                            }
                                            else {

//                                                fillListNotification(notificationArrayListTest);
                                            }
                                        }

                                    }

                                   }


//                            }

                        }
                        else {//empty shared preference
                            if(first!=1)
                            {
                                fillListNotification(notificationArrayList);
                                ShowNotifi();
                                Log.e("Notfirst",""+first);
                            }



                        }


                        Set<String> set_tow = new HashSet<String>();
                        set_tow.addAll(arrayListRow);
                        Log.e("Empty",""+arrayListRow.size());
                        editor = sharedPreferences.edit();
                        editor.putStringSet("DATE_LIST", set_tow);
                        editor.apply();

                        first=2;
//                        fillListNotification(notificationArrayList);


                    } catch (JSONException e) {
                        e.printStackTrace();
                    }

//                    INFO
                    Log.e("tag", "****Success"+s.toString());
                } else {
                    Log.e("tag", "****Failed to export data");
                }
            } else {

                Log.e("tag", "****Failed to export data Please check internet connection");
            }
        }
    }